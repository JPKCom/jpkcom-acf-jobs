name: Build WordPress Plugin ZIP, Generate Plugin Manifest & Deploy

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup environment variables
      - name: Setup variables
        id: vars
        run: |
          echo "PLUGIN_SLUG=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "ZIP_FILE=$(basename $GITHUB_REPOSITORY).zip" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=https://github.com/${GITHUB_REPOSITORY}/releases/download/${GITHUB_REF##*/}/$(basename $GITHUB_REPOSITORY).zip" >> $GITHUB_ENV

      # 3. Setup Python for parsing README.md
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 4. Extract plugin sections from README.md
      - name: Extract sections from README.md
        id: extract
        run: |
          # Extract description, installation, changelog
          DESCRIPTION=$(awk '/^## Description/{flag=1;next}/^## /{flag=0}flag' README.md | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          INSTALLATION=$(awk '/^## Installation/{flag=1;next}/^## /{flag=0}flag' README.md | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          CHANGELOG=$(awk '/^## Changelog/{flag=1;next}/^## /{flag=0}flag' README.md | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          # Extract contributors and tags
          CONTRIBUTORS=$(grep -m1 '^**Contributors:**' README.md | sed 's/\*\*Contributors:\*\* //' | sed 's/, */","/g' | sed 's/^/["/' | sed 's/$/"]/')
          TAGS=$(grep -m1 '^**Tags:**' README.md | sed 's/\*\*Tags:\*\* //' | sed 's/, */","/g' | sed 's/^/["/' | sed 's/$/"]/')
          # Export to GitHub Actions environment
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
          echo "INSTALLATION=$INSTALLATION" >> $GITHUB_ENV
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV
          echo "CONTRIBUTORS=$CONTRIBUTORS" >> $GITHUB_ENV
          echo "TAGS=$TAGS" >> $GITHUB_ENV

      # 5. Create ZIP archive of plugin
      - name: Create ZIP
        run: |
          zip -r "${{ env.ZIP_FILE }}" . -x '*.git*' -x '*.github*' -x '*.DS_Store*'

      # 6. Upload ZIP to GitHub release
      - name: Upload release ZIP
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 7. Generate plugin JSON manifest
      - name: Generate plugin JSON
        run: |
          # Assign environment variables to Bash variables
          PLUGIN_SLUG="${PLUGIN_SLUG}"
          TAG_NAME="${TAG_NAME}"
          DOWNLOAD_URL="${DOWNLOAD_URL}"
          DATE="${DATE}"
          DESCRIPTION="${DESCRIPTION}"
          INSTALLATION="${INSTALLATION}"
          CHANGELOG="${CHANGELOG}"
          CONTRIBUTORS="${CONTRIBUTORS:-[\"JPKCom\"]}"
          TAGS="${TAGS:-[\"ACF\",\"Fields\",\"CPT\",\"CTT\",\"Taxonomy\",\"Forms\"]}"

          # Heredoc must be flush-left, no indentation
cat <<EOF > plugin-$PLUGIN_SLUG.json
{
  "name": "JPKCom ACF Jobs",
  "slug": "$PLUGIN_SLUG",
  "version": "$TAG_NAME",
  "download_url": "$DOWNLOAD_URL",
  "requires": "6.8",
  "tested": "6.9",
  "requires_php": "8.3",
  "author": "<a href='https://www.jpkc.com/'>Jean Pierre Kolb</a>",
  "author_profile": "https://www.jpkc.com/",
  "contributors": $CONTRIBUTORS,
  "tags": $TAGS,
  "license": "GPL-2.0+",
  "license_uri": "http://www.gnu.org/licenses/gpl-2.0.txt",
  "text_domain": "jpkcom-acf-jobs",
  "domain_path": "/languages",
  "network": true,
  "requires_plugins": ["advanced-custom-fields-pro","acf-quickedit-fields"],
  "homepage": "https://github.com/JPKCom/jpkcom-acf-jobs",
  "last_updated": "$DATE",
  "sections": {
    "description": "$DESCRIPTION",
    "installation": "$INSTALLATION",
    "changelog": "$CHANGELOG"
  },
  "banners": {
    "low": "https://jpkcom.com/assets/jpkcom-acf-jobs-banner-772x250.avif",
    "high": "https://jpkcom.com/assets/jpkcom-acf-jobs-banner-1544x500.avif"
  }
}
EOF

      # 8. Deploy manifest to gh-pages branch
      - name: Deploy manifest to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          keep_files: true
